name: Deploy to Cloudflare Pages (term2)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: Build with next-on-pages
        run: npx @cloudflare/next-on-pages

      - name: Install Wrangler
        run: npm i -g wrangler@3

      - name: Resolve Cloudflare Account ID
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          ID=$(node -e "(async()=>{const r=await fetch('https://api.cloudflare.com/client/v4/accounts',{headers:{Authorization:'Bearer ' + process.env.CLOUDFLARE_API_TOKEN}}); const j=await r.json(); console.log(j?.result?.[0]?.id||'');})();")
          echo "CLOUDFLARE_ACCOUNT_ID=$ID" >> $GITHUB_ENV

      - name: Set Pages secret (CLOUDFLARE_API_TOKEN)
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        run: |
          wrangler pages secret put CLOUDFLARE_API_TOKEN --project-name term2 --quiet << EOF
          ${CLOUDFLARE_API_TOKEN}
          EOF

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ env.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          wrangler pages deploy .vercel/output/static \
            --project-name term2 \
            --commit-dirty \
            --config wrangler.toml
